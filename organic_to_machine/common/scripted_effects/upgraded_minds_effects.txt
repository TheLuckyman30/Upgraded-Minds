create_machine_species_effect = {
    if = {
		limit = {
			NOT = {
				exists = event_target:machinespecies@root.owner
			}
		}

		owner_main_species = {
			create_species = {
				is_mod = yes
				name = this
				plural = this
				class = "MACHINE"
				portrait = default_robot
				traits = {
					trait = trait_machine_unit
                    trait = $TRAIT$
				}
				can_be_modified = this
				homeworld = this
				namelist = this
				gender = this
				effect = {
					set_synth_or_robot_portrait_effect = yes
					save_global_event_target_as = machinespecies@root.owner
				}
			}
		}

		owner = {
			if = {
				limit = {
					has_policy_flag = robots_outlawed
				}
				set_policy = {
					policy = robot_pop_policy
					option = robot_pops_allowed
					cooldown = yes
				}
			}
			if = {
				limit = {
					OR = {
						has_policy_flag = ai_servitude
						has_policy_flag = ai_outlawed
					}
				}
				set_policy = {
					policy = artificial_intelligence_policy
					option = ai_full_rights
					cooldown = yes
				}
			}
			change_dominant_species = { species = event_target:machinespecies@root.owner change_all = yes }
		}

		every_owned_pop = {
            limit = {
                is_same_species = owner.species
                NOT = {
                    has_trait = trait_machine_unit
                }
            }
            change_species = event_target:machinespecies@root.owner
        }

        every_owned_leader = {
            limit = {
                is_same_species = owner.species
                NOT = {
                    has_trait = leader_trait_synthetic
                }
            }
            change_species = event_target:machinespecies@root.owner
            add_trait_no_notify = leader_trait_synthetic
            remove_trait = leader_trait_brainslug
            set_age = 1
        }

        every_pool_leader = {
            limit = {
                is_same_species = owner.species
                NOT = {
                    has_trait = leader_trait_synthetic
                }
            }
            change_species = event_target:machinespecies@root.owner
            add_trait_no_notify = leader_trait_synthetic
            remove_trait = leader_trait_brainslug
            set_age = 1
        }

        every_envoy = {
            limit = {
                exists = species
                species = {
                    is_robotic = no
                    is_livestock = no
                }
            }
            change_species = event_target:machinespecies@root.owner
            change_leader_portrait = species
        }

        every_controlled_ship = {
            limit = {
                is_ship_class = shipclass_colonizer
                species = {
                    is_robotic = no
                    is_livestock = no
                }
            }
            change_species = event_target:machinespecies@root.owner
        }

        every_owned_army = {
            limit = {
                exists = species
                species = {
                    is_robotic = no
                    is_livestock = no
                }
                army_type = assault_army
            }
            modify_army = {
                name = random
                type = "robotic_army"
                species = event_target:machinespecies@root.owner
            }
        }

        every_owned_army = {
            limit = {
                exists = species
                exists = planet
                species = {
                    is_robotic = no
                    is_livestock = no
                }
                OR = {
                    army_type = defense_army
                    army_type = fanatic_guardian
                }
            }
            modify_army = {
                name = random
                type = "robotic_defense_army"
                species = event_target:machinespecies@root.owner
            }
        }
	}
}